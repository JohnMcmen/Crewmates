{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jduke\\\\COP4808\\\\Lab7\\\\client\\\\src\\\\pages\\\\EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { supabase } from '../client';\nimport './EditPost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPost = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate(); // Replace useHistory with useNavigate\n\n  const [post, setPost] = useState({\n    id: null,\n    title: \"\",\n    author: \"\",\n    description: \"\"\n  }); // Fetch the post details when the component mounts\n\n  useEffect(() => {\n    const fetchPost = () => {\n      const existingPost = data.find(post => post.id === id);\n\n      if (existingPost) {\n        setPost(existingPost);\n      }\n    };\n\n    fetchPost();\n  }, [id, data]); // Handle input changes\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setPost(prev => ({ ...prev,\n      [name]: value\n    }));\n  }; // Update the post in the database\n\n\n  const updatePost = async event => {\n    event.preventDefault(); // Perform the update operation using Supabase\n\n    await supabase.from('Posts').update({\n      title: post.title,\n      author: post.author,\n      description: post.description\n    }).eq('id', id); // Redirect to home page\n\n    navigate('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updatePost,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        name: \"title\",\n        value: post.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"author\",\n        children: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"author\",\n        name: \"author\",\n        value: post.author,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        cols: \"50\",\n        id: \"description\",\n        name: \"description\",\n        value: post.description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditPost, \"23zboGBxAMlXYALj4sjE9JYFi18=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","supabase","EditPost","data","id","navigate","post","setPost","title","author","description","fetchPost","existingPost","find","handleChange","event","name","value","target","prev","updatePost","preventDefault","from","update","eq"],"sources":["C:/Users/jduke/COP4808/Lab7/client/src/pages/EditPost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { supabase } from '../client';\nimport './EditPost.css';\n\nconst EditPost = ({ data }) => {\n    const { id } = useParams();\n    const navigate = useNavigate(); // Replace useHistory with useNavigate\n\n    const [post, setPost] = useState({ id: null, title: \"\", author: \"\", description: \"\" });\n\n    // Fetch the post details when the component mounts\n    useEffect(() => {\n        const fetchPost = () => {\n            const existingPost = data.find(post => post.id === id);\n            if (existingPost) {\n                setPost(existingPost);\n            }\n        };\n        fetchPost();\n    }, [id, data]);\n\n    // Handle input changes\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setPost((prev) => ({\n            ...prev,\n            [name]: value,\n        }));\n    };\n\n    // Update the post in the database\n    const updatePost = async (event) => {\n        event.preventDefault();\n\n        // Perform the update operation using Supabase\n        await supabase\n            .from('Posts')\n            .update({ title: post.title, author: post.author, description: post.description })\n            .eq('id', id);\n\n        // Redirect to home page\n        navigate('/');\n    };\n\n    return (\n        <div>\n            <form onSubmit={updatePost}>\n                <label htmlFor=\"title\">Title</label>\n                <br />\n                <input type=\"text\" id=\"title\" name=\"title\" value={post.title} onChange={handleChange} />\n                <br /><br />\n\n                <label htmlFor=\"author\">Author</label>\n                <br />\n                <input type=\"text\" id=\"author\" name=\"author\" value={post.author} onChange={handleChange} />\n                <br /><br />\n\n                <label htmlFor=\"description\">Description</label>\n                <br />\n                <textarea rows=\"5\" cols=\"50\" id=\"description\" name=\"description\" value={post.description} onChange={handleChange}></textarea>\n                <br /><br />\n\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n        </div>\n    );\n};\n\nexport default EditPost;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAG,QAAc;EAAA;;EAAA,IAAb;IAAEC;EAAF,CAAa;EAC3B,MAAM;IAAEC;EAAF,IAASL,SAAS,EAAxB;EACA,MAAMM,QAAQ,GAAGL,WAAW,EAA5B,CAF2B,CAEK;;EAEhC,MAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC;IAAEO,EAAE,EAAE,IAAN;IAAYI,KAAK,EAAE,EAAnB;IAAuBC,MAAM,EAAE,EAA/B;IAAmCC,WAAW,EAAE;EAAhD,CAAD,CAAhC,CAJ2B,CAM3B;;EACAZ,SAAS,CAAC,MAAM;IACZ,MAAMa,SAAS,GAAG,MAAM;MACpB,MAAMC,YAAY,GAAGT,IAAI,CAACU,IAAL,CAAUP,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYA,EAA9B,CAArB;;MACA,IAAIQ,YAAJ,EAAkB;QACdL,OAAO,CAACK,YAAD,CAAP;MACH;IACJ,CALD;;IAMAD,SAAS;EACZ,CARQ,EAQN,CAACP,EAAD,EAAKD,IAAL,CARM,CAAT,CAP2B,CAiB3B;;EACA,MAAMW,YAAY,GAAIC,KAAD,IAAW;IAC5B,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAkBF,KAAK,CAACG,MAA9B;IACAX,OAAO,CAAEY,IAAD,KAAW,EACf,GAAGA,IADY;MAEf,CAACH,IAAD,GAAQC;IAFO,CAAX,CAAD,CAAP;EAIH,CAND,CAlB2B,CA0B3B;;;EACA,MAAMG,UAAU,GAAG,MAAOL,KAAP,IAAiB;IAChCA,KAAK,CAACM,cAAN,GADgC,CAGhC;;IACA,MAAMpB,QAAQ,CACTqB,IADC,CACI,OADJ,EAEDC,MAFC,CAEM;MAAEf,KAAK,EAAEF,IAAI,CAACE,KAAd;MAAqBC,MAAM,EAAEH,IAAI,CAACG,MAAlC;MAA0CC,WAAW,EAAEJ,IAAI,CAACI;IAA5D,CAFN,EAGDc,EAHC,CAGE,IAHF,EAGQpB,EAHR,CAAN,CAJgC,CAShC;;IACAC,QAAQ,CAAC,GAAD,CAAR;EACH,CAXD;;EAaA,oBACI;IAAA,uBACI;MAAM,QAAQ,EAAEe,UAAhB;MAAA,wBACI;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAO,IAAI,EAAC,MAAZ;QAAmB,EAAE,EAAC,OAAtB;QAA8B,IAAI,EAAC,OAAnC;QAA2C,KAAK,EAAEd,IAAI,CAACE,KAAvD;QAA8D,QAAQ,EAAEM;MAAxE;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAA;QAAA;QAAA;MAAA,QAJJ,eAIU;QAAA;QAAA;QAAA;MAAA,QAJV,eAMI;QAAO,OAAO,EAAC,QAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANJ,eAOI;QAAA;QAAA;QAAA;MAAA,QAPJ,eAQI;QAAO,IAAI,EAAC,MAAZ;QAAmB,EAAE,EAAC,QAAtB;QAA+B,IAAI,EAAC,QAApC;QAA6C,KAAK,EAAER,IAAI,CAACG,MAAzD;QAAiE,QAAQ,EAAEK;MAA3E;QAAA;QAAA;QAAA;MAAA,QARJ,eASI;QAAA;QAAA;QAAA;MAAA,QATJ,eASU;QAAA;QAAA;QAAA;MAAA,QATV,eAWI;QAAO,OAAO,EAAC,aAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXJ,eAYI;QAAA;QAAA;QAAA;MAAA,QAZJ,eAaI;QAAU,IAAI,EAAC,GAAf;QAAmB,IAAI,EAAC,IAAxB;QAA6B,EAAE,EAAC,aAAhC;QAA8C,IAAI,EAAC,aAAnD;QAAiE,KAAK,EAAER,IAAI,CAACI,WAA7E;QAA0F,QAAQ,EAAEI;MAApG;QAAA;QAAA;QAAA;MAAA,QAbJ,eAcI;QAAA;QAAA;QAAA;MAAA,QAdJ,eAcU;QAAA;QAAA;QAAA;MAAA,QAdV,eAgBI;QAAO,IAAI,EAAC,QAAZ;QAAqB,KAAK,EAAC;MAA3B;QAAA;QAAA;QAAA;MAAA,QAhBJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAsBH,CA9DD;;GAAMZ,Q;UACaH,S,EACEC,W;;;KAFfE,Q;AAgEN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}